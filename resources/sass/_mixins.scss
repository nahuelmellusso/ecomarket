
@mixin respond_to($media, $min_width: false, $max_width: false) {
    //Setup media checks
    $is_xl: index($media, xl) != null;
    $is_lg: index($media, lg) != null;
    $is_md: index($media, md) != null;
    $is_sm: index($media, sm) != null;
    $is_xs: index($media, xs) != null;

    $is_xl_down: index($media, xl-down) != null;
    $is_lg_down: index($media, lg-down) != null;
    $is_md_down: index($media, md-down) != null;
    $is_sm_down: index($media, sm-down) != null;
    $is_xs_down: index($media, xs-down) != null;

    $is_xl_only: index($media, xl-only) != null;
    $is_lg_only: index($media, lg-only) != null;
    $is_md_only: index($media, md-only) != null;
    $is_sm_only: index($media, sm-only) != null;
    $is_xs_only: index($media, xs-only) != null;

    $is_custom: index($media, custom) != null;

    @if $is_xl {
        @media only screen and (min-width: $screen-xl-min) { @content; }
    }
    @if $is_lg {
        @media only screen and (min-width: $screen-lg-min) { @content; }
    }
    @if $is_md {
        @media only screen and (min-width: $screen-md-min) { @content; }
    }
    @if $is_sm {
        @media only screen and (min-width: $screen-sm-min) { @content; }
    }
    @if $is_xs {
        @media only screen and (min-width: $screen-xs-min) { @content; }
    }

    @if $is_xl_down {
        @media only screen and (max-width: $screen-xl-max) { @content; }
    }
    @if $is_lg_down {
        @media only screen and (max-width: $screen-lg-max) { @content; }
    }
    @if $is_md_down {
        @media only screen and (max-width: $screen-md-max) { @content; }
    }
    @if $is_sm_down {
        @media only screen and (max-width: $screen-sm-max) { @content; }
    }
    @if $is_xs_down {
        @media only screen and (max-width: $screen-xs-max) { @content; }
    }

    @if $is_xl_only {
        @media only screen and (min-width: $screen-xl-min) and (max-width: $screen-xl-max){ @content; }
    }
    @if $is_lg_only {
        @media only screen and (min-width: $screen-lg-min) and (max-width: $screen-lg-max){ @content; }
    }
    @if $is_md_only {
        @media only screen and (min-width: $screen-md-min) and (max-width: $screen-md-max){ @content; }
    }
    @if $is_sm_only {
        @media only screen and (min-width: $screen-sm-min) and (max-width: $screen-sm-max) { @content; }
    }
    @if $is_xs_only {
        @media only screen and (min-width: $screen-xs-min) and (max-width: $screen-xs-max) { @content; }
    }

    @if $is_custom {
        @if $min_width and $max_width{
            @media only screen and (min-width: $min_width) and (max-width: $max_width) { @content; }
        }
        @if $min_width and $max_width == false{
            @media only screen and (min-width: $min_width){ @content; }
        }
        @if $max_width and $min_width == false{
            @media only screen and (max-width: $max_width) { @content; }
        }
    }
}

@mixin font($name, $file, $weight: normal, $style: normal, $font_types: eot woff woff2 ttf svg, $directory:'../fonts'){
    $weight: $weight;
    $style: $style;
    $src: "";
    @font-face {
        font-family: $name;

        @if index($font_types, eot){
            $src: $src +
            "url('#{$directory}/#{$file}.eot');src: url('#{$directory}/#{$file}.eot?#iefix') format('embedded-opentype')";
        }
        @if index($font_types, woff2){
            @if $src != ""{
                $src: $src + ",";
            }
            $src: $src + "url('#{$directory}/#{$file}.woff2') format('woff2')";
        }
        @if index($font_types, woff){
            @if $src != ""{
                $src: $src + ",";
            }
            $src: $src + "url('#{$directory}/#{$file}.woff') format('woff')";
        }
        @if index($font_types, ttf){
            @if $src != ""{
                $src: $src + ",";
            }
            $src: $src + "url('#{$directory}/#{$file}.ttf') format('truetype')";
        }
        @if index($font_types, svg){
            @if $src != ""{
                $src: $src + ",";
            }
            $src: $src + "url('#{$directory}/#{$file}.svg##{$name}#{$weight}') format('svg')";
        }
        src: #{$src};

        font-weight: $weight;
        font-style: $style;
    }
}

@mixin bg_2x($url,$url2 : false){
    @media only screen and ( -webkit-min-device-pixel-ratio: 1.3 ),
    only screen and (    min--moz-device-pixel-ratio: 1.3 ),
    only screen and (      -o-min-device-pixel-ratio: 2.6/2 ), /* returns 1.3, see Dev.Opera */
    only screen and (         min-device-pixel-ratio: 1.3 ),
    only screen and ( min-resolution: 124.8dpi ),
    only screen and ( min-resolution: 1.3dppx ) {

        @if($url2){
            background-image:$url,$url2;
        }@else{
            background-image:$url;
        }

    }
}


@mixin box_shadow_components() {
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
}

@mixin box_shadow_circle_icons() {
    box-shadow: 0px 0px 5px 2px #e7e7e7;
}